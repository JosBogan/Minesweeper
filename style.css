@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap');

:root {
  --width: 9;
  --rotation: 0deg;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Roboto Mono', monospace;
}


.no_highlight {
  user-select: none;
}

header {
  display: flex;
  justify-content: space-evenly;
}

.restart {
  background-image: url(./assets/refresh.svg);
  background-position: center;
  background-size: cover;
  padding: 5px;
  width: 20px;
  z-index: 5;
  cursor: pointer;
}

.theme_switch {
  position: fixed;
  top: 50px;
  right: 50px;
}

.main_container {
  width: 100%;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor:  move;
}

.game_board_container {
  display: flex;
  flex-wrap: wrap;
  
  /* box-shadow: 0px 10px 80px -7px rgba(1, 1, 1, 0.5); */

  transform-style: preserve-3d;
  transform: perspective(400px) rotateX(40deg) rotateZ(var(--rotation));
}

.square {
  /* border: 1px solid rgba(0, 0, 0, 0.158); */
  width: 40px;
  height: 40px;
  background-color: rgb(189, 101, 192);
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: crosshair;
  user-select: none;
  outline: 1px solid transparent;

  
  position: relative;
  overflow: visible;
}

.square:hover {
  background-color: rgba(189, 101, 192, 0.5);
}

/* .square:nth-of-type(18n),  */
.square:nth-of-type(18n + 1),
.square:nth-of-type(18n + 3), 
.square:nth-of-type(18n + 5),
.square:nth-of-type(18n + 7),
.square:nth-of-type(18n + 9),
.square:nth-of-type(18n + 11),
.square:nth-of-type(18n + 13),
.square:nth-of-type(18n + 15),
.square:nth-of-type(18n + 17) {
  background-color: rgb(127, 255, 212);
}

.square:nth-of-type(18n + 1):hover,
.square:nth-of-type(18n + 3):hover, 
.square:nth-of-type(18n + 5):hover,
.square:nth-of-type(18n + 7):hover,
.square:nth-of-type(18n + 9):hover,
.square:nth-of-type(18n + 11):hover,
.square:nth-of-type(18n + 13):hover,
.square:nth-of-type(18n + 15):hover,
.square:nth-of-type(18n + 17):hover {
  background-color: rgba(127, 255, 212, 0.5);
}



.game_board_container > .flag {
  /* background-image: url(./assets/flag.svg);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center; */
  /* position: relative;
  overflow: visible; */
}

.game_board_container > .flag::after {
  pointer-events: none;
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url(./assets/flag.svg);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  transform-style: preserve-3d;
  transform: rotateX(290deg) translateY(-10px) translateX(5px) perspective(400px);
  /* transform-origin: bottom center; */
}

/* .square:hover {
 opacity: 0.5;
} */

.main_container .game_board_container > .clicked {
  background-color: whitesmoke;
  cursor: default;
}



.game_board_container > .bomb {
  background-color: whitesmoke;
}

.game_board_container > .bomb::after {
  content: '';
  position: absolute;
  pointer-events: none;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url(./assets/mine.png);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
    transform-style: preserve-3d;
  transform:  rotateX(-30deg) translateZ(10px) translateY(-2px) perspective(400px);
}

.game_board_container > .bomb::before {
  content: '';
  position: absolute;
  pointer-events: none;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url(./assets/mine.png);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  transform-style: preserve-3d;
  transform:  rotateX(-30deg) translateZ(10px) translateY(-2px) rotateX(77deg) perspective(400px);
}


/* @keyframes size {
  0% {
    transform: rotate(0deg);
  }

  50% {
    transform: rotate(10deg);
  }

  100% {
    transform: rotate(0deg);
  }
} */


/* ! 2D */

.main_container_2D {
  width: 100%;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: black;
  color: white;
}

.main_container_2D .restart {
  background-image: url(./assets/refreshW.svg);
  background-position: center;
  background-size: cover;
  padding: 5px;
  width: 20px;
  z-index: 5;
  cursor: pointer;
}

/* .rotate {
  transition: all 1s;
  transform: rotate(360deg);
} */

.main_container_2D header {
  margin-bottom: 20px;
}


.game_board_container_2D {
  display: flex;
  flex-wrap: wrap;
}

.square_2D {
  /* border: 1px solid rgba(0, 0, 0, 0.158); */
  width: 40px;
  height: 40px;
  color: #ffffff;
  background-color: rgb(0, 0, 0);
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: crosshair;
  user-select: none;
  border: 1px solid white;
  
  position: relative;
}

.square_2D:nth-of-type(1) {
  border-radius: 10px 0 0 0 ;
}
.square_2D:nth-of-type(9) {
  border-radius: 0 10px 0 0;
}

.square_2D:nth-of-type(73) {
  border-radius: 0 0 0 10px;
}

.square_2D:nth-of-type(81) {
  border-radius: 0 0 10px 0;
}

.square_2D:nth-of-type(9n) {
  border-right: 2px solid white;
}

.square_2D:nth-of-type(-n + 9) {
  border-top: 2px solid white;
}

.square_2D:nth-of-type(n + 73) {
  border-bottom: 2px solid white;
}

.square_2D:nth-of-type(9n + 1) {
  border-left: 2px solid white;
}

.square_2D:hover {
  background-color: rgb(48, 48, 48);
}

.main_container_2D .game_board_container_2D > .clicked {
  background-color: white;
  color: black;
  cursor: default;
}

.game_board_container_2D > .flag {
  background-image: url(./assets/flag_other.svg);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

.game_board_container_2D > .bomb {
  filter: invert(1);
  /* background-image: url(./assets/mine.png);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  
   */
   background-color: white;
   border-color: black;
  position: relative;
}


.game_board_container_2D > .bomb::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url(./assets/mine.png);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}


/* Animations */

.shake {
  animation: shake;
  animation-duration: 0.5s;
  animation-iteration-count: 1;
}


@keyframes shake {
  10% {
    transform: perspective(400px) rotateX(40deg) rotateZ(var(--rotation)) translate3d(-4px, 4px, 5px);
  }

  20% {
    transform: perspective(400px) rotateX(40deg) rotateZ(var(--rotation)) translate3d(2px, 4px, -1px);
  }
  30% {
    transform: perspective(400px) rotateX(40deg) rotateZ(var(--rotation)) translate3d(-2px, 2px, -1px);
  }
  
  40% {
    transform: perspective(400px) rotateX(40deg) rotateZ(var(--rotation)) translate3d(3px, -1px, 2px);
  }
  50% {
    transform: perspective(400px) rotateX(40deg) rotateZ(var(--rotation)) translate3d(1px, -4px, 3px);
  }

  60%{
    transform: perspective(400px) rotateX(40deg) rotateZ(var(--rotation)) translate3d(-2px, 5px, -2px);
  }
  70%{
    transform: perspective(400px) rotateX(40deg) rotateZ(var(--rotation)) translate3d(-1px, -3px, 5px);
  }

  80% {
    transform: perspective(400px) rotateX(40deg) rotateZ(var(--rotation)) translate3d(1px, -1px, -5px);
  }
  90% {
    transform: perspective(400px) rotateX(40deg) rotateZ(var(--rotation)) translate3d(3px, -1px, 2px);
  }

  100% {
    transform: perspective(400px) rotateX(40deg) rotateZ(var(--rotation)) translate3d(0px, 0px, 0px);
  }
}

.rotate {
  animation: rotate;
  animation-duration: 0.5s;
  animation-iteration-count: 1;
  animation-timing-function: ease-in-out;
}

@keyframes rotate {

  100% {
    transform: rotate(360deg)
  }
}