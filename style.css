@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap');

:root {
  --width: 8;
  --rotation: 45deg;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Roboto Mono', monospace;
}

.no_highlight {
  user-select: none;
}

.main_container {
  width: 100%;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.game_board_container {
  display: flex;
  flex-wrap: wrap;
  
  /* box-shadow: 0px 10px 80px -7px rgba(1, 1, 1, 0.5); */

  transform-style: preserve-3d;
  transform: perspective(400px) rotateX(30deg) rotateZ(var(--rotation));
}

.square {
  /* border: 1px solid rgba(0, 0, 0, 0.158); */
  width: 40px;
  height: 40px;
  background-color: rgb(189, 101, 192);
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  user-select: none;

  outline: 1px solid transparent;
}

/* .square:nth-of-type(18n),  */
.square:nth-of-type(18n + 1),
.square:nth-of-type(18n + 3), 
.square:nth-of-type(18n + 5),
.square:nth-of-type(18n + 7),
.square:nth-of-type(18n + 9),
.square:nth-of-type(18n + 11),
.square:nth-of-type(18n + 13),
.square:nth-of-type(18n + 15),
.square:nth-of-type(18n + 17) {
  background-color: aquamarine;
}

.game_board_container > .flag {
  background-color: green;
}
.game_board_container > .clicked {
  background-color: whitesmoke;
  cursor: default;
}



.game_board_container > .bomb {
  background: black;
}

/* @keyframes size {
  0% {
    transform: rotate(0deg);
  }

  50% {
    transform: rotate(10deg);
  }

  100% {
    transform: rotate(0deg);
  }
} */

